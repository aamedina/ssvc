@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix spdx-core: <https://spdx.org/rdf/v3/Core/> .
@prefix spdx-simplelicensing: <https://spdx.org/rdf/v3/SimpleLicensing/> .
@prefix vs: <http://www.w3.org/2003/06/sw-vocab-status/ns#> .

spdx-simplelicensing: a owl:Ontology ;
  rdfs:comment "The Licensing namespace defines metadata fields applicable to software licensing. It also defines the classes and properties that comprise the SPDX License Expression syntax and that relate to the SPDX License List." ;
  owl:imports (
    spdx-core: 
    ) ;
  sh:declare [
    sh:prefix "spdx-simplelicensing" ;
    sh:namespace "https://spdx.org/rdf/v3/SimpleLicensing/" ;
  ] .

spdx-simplelicensing:AnyLicenseInfo a owl:Class, sh:NodeShape ;
  rdfs:comment """An AnyLicenseInfo is used by licensing properties of software artifacts.
It can be a NoneLicense, a NoAssertionLicense,
single license (either on the SPDX License List or a custom-defined license);
a single license with an "or later" operator applied; the foregoing with
additional text applied; or a set of licenses combined by applying "AND" and
"OR" operators recursively.""" ;
  rdfs:subClassOf spdx-core:Element ;
  vs:term_status "Stable" .

spdx-simplelicensing:LicenseExpression a owl:Class, sh:NodeShape ;
  rdfs:comment """Often a single license can be used to represent the licensing terms of a source code or binary file, but there are situations where a single license identifier is not sufficient. A common example is when software is offered under a choice of one or more licenses (e.g., GPL-2.0-only OR BSD-3-Clause). Another example is when a set of licenses is needed to represent a binary program constructed by compiling and linking two (or more) different source files each governed by different licenses (e.g., LGPL-2.1-only AND BSD-3-Clause).

SPDX License Expressions provide a way for one to construct expressions that more accurately represent the licensing terms typically found in open source software source code. A license expression could be a single license identifier found on the SPDX License List; a user defined license reference denoted by the LicenseRef-idString; a license identifier combined with an SPDX exception; or some combination of license identifiers, license references and exceptions constructed using a small set of defined operators (e.g., AND, OR, WITH and +). We provide the definition of what constitutes a valid an SPDX License Expression in this section.""" ;
  rdfs:subClassOf spdx-simplelicensing:AnyLicenseInfo ;
  sh:property [
    sh:datatype xsd:string ;
    sh:maxCount 1 ;
    sh:minCount 1 ;
    sh:name "licenseExpression" ;
    sh:path spdx-simplelicensing:licenseExpression ;
  ] ;
  vs:term_status "Stable" .

spdx-simplelicensing:SimpleLicensingText a owl:Class, sh:NodeShape ;
  rdfs:comment """A SimpleLicensingText represents a License or Addition that is not listed on the SPDX License
List at https://spdx.org/licenses, and is therefore defined by an SPDX data
creator.""" ;
  rdfs:subClassOf spdx-core:Element ;
  sh:property [
    sh:datatype xsd:string ;
    sh:maxCount 1 ;
    sh:minCount 1 ;
    sh:name "licenseText" ;
    sh:path spdx-simplelicensing:licenseText ;
  ] ;
  vs:term_status "Stable" .

spdx-simplelicensing:licenseExpression a owl:DatatypeProperty ;
  rdfs:comment """Often a single license can be used to represent the licensing terms of a source code or binary file, but there are situations where a single license identifier is not sufficient. A common example is when software is offered under a choice of one or more licenses (e.g., GPL-2.0-only OR BSD-3-Clause). Another example is when a set of licenses is needed to represent a binary program constructed by compiling and linking two (or more) different source files each governed by different licenses (e.g., LGPL-2.1-only AND BSD-3-Clause).

SPDX License Expressions provide a way for one to construct expressions that more accurately represent the licensing terms typically found in open source software source code. A license expression could be a single license identifier found on the SPDX License List; a user defined license reference denoted by the LicenseRef-idString; a license identifier combined with an SPDX exception; or some combination of license identifiers, license references and exceptions constructed using a small set of defined operators (e.g., AND, OR, WITH and +). We provide the definition of what constitutes a valid an SPDX License Expression in this section.""" ;
  rdfs:domain spdx-simplelicensing:LicenseExpression ;
  rdfs:range xsd:string ;
  vs:term_status "Stable" .

spdx-simplelicensing:licenseText a owl:DatatypeProperty ;
  rdfs:comment """A licenseText contains the plain text of the License or Addition,
without templating or other similar markup.

Users of the licenseText for a License can apply the SPDX Matching Guidelines
when comparing it to another text for matching purposes.""" ;
  rdfs:domain spdx-simplelicensing:SimpleLicensingText ;
  rdfs:range xsd:string ;
  vs:term_status "Stable" .


